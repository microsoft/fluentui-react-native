// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component tests Button circular 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 9999,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Circular Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    shape="circular"
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 9999,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Circular Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button composed 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Composed Button with RNText"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "letterSpacing": undefined,
          "lineHeight": undefined,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Composed Button with RNText
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button customized 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "pink",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Custom Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Custom Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button default 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Default Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Default Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button large 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Large Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="large"
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 7,
        "paddingHorizontal": 15,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 16,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Large Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button primary 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#0078d4",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Primary Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    appearance="primary"
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#005a9e",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Primary Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button small 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Small Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="small"
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 64,
        "padding": 3,
        "paddingHorizontal": 7,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 13,
          "fontWeight": "400",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Small Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button square 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#f3f2f1",
      "borderRadius": 0,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Square Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    shape="square"
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#8a8886",
        "borderRadius": 0,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Square Button
    </Text>
  </View>
</View>
`;

exports[`Button component tests Button subtle 1`] = `
<View
  style={
    Object {
      "alignSelf": "baseline",
      "backgroundColor": "#ffffff",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityLabel="Subtle Button"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    appearance="subtle"
    collapsable={false}
    enableFocusRing={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "borderColor": "#ffffff",
        "borderRadius": 4,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "minWidth": 96,
        "padding": 5,
        "paddingHorizontal": 11,
        "width": undefined,
      }
    }
  >
    <Text
      ellipsizeMode="tail"
      numberOfLines={0}
      style={
        Object {
          "color": "#323130",
          "fontFamily": "Segoe UI",
          "fontSize": 14,
          "fontWeight": "600",
          "margin": 0,
          "marginBottom": 0,
          "marginEnd": 0,
          "marginStart": 0,
          "marginTop": 0,
        }
      }
    >
      Subtle Button
    </Text>
  </View>
</View>
`;
