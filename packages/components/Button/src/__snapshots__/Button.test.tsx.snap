// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component tests Button circular 1`] = `
<View
  accessibilityLabel="Circular Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  shape="circular"
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 9999,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Circular Button
  </Text>
</View>
`;

exports[`Button component tests Button composed 1`] = `
<View
  accessibilityLabel="Composed Button with RNText"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#ffffff",
        "dynamicTypeRamp": undefined,
        "fontFamily": "System",
        "fontSize": 15,
        "fontStyle": undefined,
        "fontWeight": "600",
        "letterSpacing": undefined,
        "lineHeight": undefined,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
        "maximumFontSize": undefined,
        "textDecorationLine": undefined,
      }
    }
  >
    Composed Button with RNText
  </Text>
</View>
`;

exports[`Button component tests Button customized 1`] = `
<View
  accessibilityLabel="Custom Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Custom Button
  </Text>
</View>
`;

exports[`Button component tests Button default 1`] = `
<View
  accessibilityLabel="Default Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Default Button
  </Text>
</View>
`;

exports[`Button component tests Button disabled 1`] = `
<View
  accessibilityLabel="Disabled Button"
  accessibilityRole="button"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={false}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#f3f2f1",
      "borderColor": "#f3f2f1",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#d2d0ce",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Disabled Button
  </Text>
</View>
`;

exports[`Button component tests Button large 1`] = `
<View
  accessibilityLabel="Large Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 11,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 17,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Large Button
  </Text>
</View>
`;

exports[`Button component tests Button primary 1`] = `
<View
  accessibilityLabel="Primary Button"
  accessibilityRole="button"
  accessible={true}
  appearance="primary"
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Primary Button
  </Text>
</View>
`;

exports[`Button component tests Button small 1`] = `
<View
  accessibilityLabel="Small Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="small"
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 64,
      "padding": 7,
      "paddingHorizontal": 11,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 13,
        "fontWeight": "400",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Small Button
  </Text>
</View>
`;

exports[`Button component tests Button square 1`] = `
<View
  accessibilityLabel="Square Button"
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  shape="square"
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0f6cbd",
      "borderColor": "#0f548c",
      "borderRadius": 0,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Square Button
  </Text>
</View>
`;

exports[`Button component tests Button subtle 1`] = `
<View
  accessibilityLabel="Subtle Button"
  accessibilityRole="button"
  accessible={true}
  appearance="subtle"
  collapsable={false}
  enableFocusRing={true}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#ffffff",
      "borderColor": "#ffffff",
      "borderRadius": 4,
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 96,
      "padding": 8,
      "paddingHorizontal": 15,
      "width": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    style={
      Object {
        "color": "#323130",
        "fontFamily": "System",
        "fontSize": 15,
        "fontWeight": "600",
        "margin": 0,
        "marginBottom": 0,
        "marginEnd": 0,
        "marginStart": 0,
        "marginTop": 0,
      }
    }
  >
    Subtle Button
  </Text>
</View>
`;
