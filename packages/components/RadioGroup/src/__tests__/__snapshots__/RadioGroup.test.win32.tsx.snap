// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioButton Tests Disabled RadioButton 1`] = `
<View
  acceptsKeyboardFocus={true}
  accessibilityActions={
    Array [
      Object {
        "label": "Select a RadioButton",
        "name": "Select",
      },
    ]
  }
  accessibilityLabel="Test"
  accessibilityRole="radio"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "row",
      "marginTop": 0,
      "minHeight": 20,
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "#f3f2f1",
        "borderRadius": 10,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 20,
        "left": 0,
        "marginBottom": 6,
        "marginLeft": 6,
        "marginRight": 6,
        "marginTop": 4,
        "top": 0,
        "width": 20,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderRadius": 5,
          "height": 10,
          "left": 4,
          "opacity": 0,
          "position": "relative",
          "top": 4,
          "width": 10,
        }
      }
    />
  </View>
  <Text
    style={
      Object {
        "borderColor": "transparent",
        "borderStyle": "dashed",
        "borderWidth": 1,
        "color": "#a19f9d",
        "fontSize": 12,
        "marginTop": 3,
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`RadioButton Tests RadioButton default 1`] = `
<View
  acceptsKeyboardFocus={true}
  accessibilityActions={
    Array [
      Object {
        "label": "Select a RadioButton",
        "name": "Select",
      },
    ]
  }
  accessibilityLabel="Test"
  accessibilityRole="radio"
  accessibilityStates={Array []}
  accessible={true}
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "row",
      "marginTop": 0,
      "minHeight": 20,
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "#323130",
        "borderRadius": 10,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 20,
        "left": 0,
        "marginBottom": 6,
        "marginLeft": 6,
        "marginRight": 6,
        "marginTop": 4,
        "top": 0,
        "width": 20,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#323130",
          "borderRadius": 5,
          "height": 10,
          "left": 4,
          "opacity": 0,
          "position": "relative",
          "top": 4,
          "width": 10,
        }
      }
    />
  </View>
  <Text
    style={
      Object {
        "borderColor": "transparent",
        "borderStyle": "dashed",
        "borderWidth": 1,
        "color": "#323130",
        "fontSize": 12,
        "marginTop": 3,
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`RadioButton Tests RadioButton with all props 1`] = `
<View
  acceptsKeyboardFocus={true}
  accessibilityActions={
    Array [
      Object {
        "label": "Select a RadioButton",
        "name": "Select",
      },
    ]
  }
  accessibilityLabel="Test ariaLabel"
  accessibilityRole="radio"
  accessibilityStates={Array []}
  accessible={true}
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "row",
      "marginTop": 0,
      "minHeight": 20,
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "#323130",
        "borderRadius": 10,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 20,
        "left": 0,
        "marginBottom": 6,
        "marginLeft": 6,
        "marginRight": 6,
        "marginTop": 4,
        "top": 0,
        "width": 20,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#323130",
          "borderRadius": 5,
          "height": 10,
          "left": 4,
          "opacity": 0,
          "position": "relative",
          "top": 4,
          "width": 10,
        }
      }
    />
  </View>
  <Text
    style={
      Object {
        "borderColor": "transparent",
        "borderStyle": "dashed",
        "borderWidth": 1,
        "color": "#323130",
        "fontSize": 12,
        "marginTop": 3,
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`RadioButton Tests RadioButton with all props and tokens 1`] = `
<View
  acceptsKeyboardFocus={true}
  accessibilityActions={
    Array [
      Object {
        "label": "Select a RadioButton",
        "name": "Select",
      },
    ]
  }
  accessibilityLabel="Test ariaLabel"
  accessibilityRole="radio"
  accessibilityStates={Array []}
  accessible={true}
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "row",
      "marginTop": 0,
      "minHeight": 20,
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "blue",
        "borderRadius": 10,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 20,
        "left": 0,
        "marginBottom": 6,
        "marginLeft": 6,
        "marginRight": 6,
        "marginTop": 4,
        "top": 0,
        "width": 20,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "black",
          "borderRadius": 5,
          "height": 10,
          "left": 4,
          "opacity": 0,
          "position": "relative",
          "top": 4,
          "width": 10,
        }
      }
    />
  </View>
  <Text
    style={
      Object {
        "borderColor": "transparent",
        "borderStyle": "dashed",
        "borderWidth": 1,
        "color": "red",
        "fontSize": 18,
        "marginTop": 3,
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`RadioGroup + RadioButton Tests RadioGroup default 1`] = `
<View
  accessibilityLabel="Test RadioGroup"
  accessibilityRole="radiogroup"
  accessible={true}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#323130",
        "fontFamily": "inherit",
        "fontSize": 12,
        "fontWeight": "600",
      }
    }
  >
    Test RadioGroup
  </Text>
  <View />
</View>
`;

exports[`RadioGroup + RadioButton Tests RadioGroup with all props and default RadioButton 1`] = `
<View
  accessibilityLabel="RadioGroup ariaLabel"
  accessibilityRole="radiogroup"
  accessible={true}
  rest={
    Object {
      "defaultSelectedKey": "a",
      "onChange": [Function],
    }
  }
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#323130",
        "fontFamily": "inherit",
        "fontSize": 12,
        "fontWeight": "600",
      }
    }
  >
    Test RadioGroup
  </Text>
  <View>
    <View
      acceptsKeyboardFocus={true}
      accessibilityActions={
        Array [
          Object {
            "label": "Select a RadioButton",
            "name": "Select",
          },
        ]
      }
      accessibilityLabel="Test"
      accessibilityRole="radio"
      accessibilityStates={
        Array [
          "selected",
        ]
      }
      accessible={true}
      onAccessibilityAction={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      rest={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 0,
          "minHeight": 20,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#323130",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 20,
            "left": 0,
            "marginBottom": 6,
            "marginLeft": 6,
            "marginRight": 6,
            "marginTop": 4,
            "top": 0,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#323130",
              "borderRadius": 5,
              "height": 10,
              "left": 4,
              "opacity": 1,
              "position": "relative",
              "top": 4,
              "width": 10,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "borderColor": "rgba(128, 128, 128, 1)",
            "borderStyle": "dashed",
            "borderWidth": 1,
            "color": "#323130",
            "fontSize": 12,
            "marginTop": 3,
          }
        }
      >
        Test
      </Text>
    </View>
  </View>
</View>
`;

exports[`RadioGroup + RadioButton Tests RadioGroup with all props and four default RadioButtons 1`] = `
<View
  accessibilityLabel="This is a test RadioGroup"
  accessibilityRole="radiogroup"
  accessible={true}
  rest={
    Object {
      "defaultSelectedKey": "A",
      "onChange": [Function],
    }
  }
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#323130",
        "fontFamily": "inherit",
        "fontSize": 12,
        "fontWeight": "600",
      }
    }
  >
    This is a test RadioGroup
  </Text>
  <View>
    <View
      acceptsKeyboardFocus={true}
      accessibilityActions={
        Array [
          Object {
            "label": "Select a RadioButton",
            "name": "Select",
          },
        ]
      }
      accessibilityLabel="Cool"
      accessibilityRole="radio"
      accessibilityStates={
        Array [
          "selected",
        ]
      }
      accessible={true}
      onAccessibilityAction={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      rest={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 0,
          "minHeight": 20,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#323130",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 20,
            "left": 0,
            "marginBottom": 6,
            "marginLeft": 6,
            "marginRight": 6,
            "marginTop": 4,
            "top": 0,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#323130",
              "borderRadius": 5,
              "height": 10,
              "left": 4,
              "opacity": 1,
              "position": "relative",
              "top": 4,
              "width": 10,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "borderColor": "rgba(128, 128, 128, 1)",
            "borderStyle": "dashed",
            "borderWidth": 1,
            "color": "#323130",
            "fontSize": 12,
            "marginTop": 3,
          }
        }
      >
        Option A
      </Text>
    </View>
    <View
      acceptsKeyboardFocus={true}
      accessibilityActions={
        Array [
          Object {
            "label": "Select a RadioButton",
            "name": "Select",
          },
        ]
      }
      accessibilityLabel="Option B"
      accessibilityRole="radio"
      accessibilityStates={Array []}
      accessible={true}
      onAccessibilityAction={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      rest={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 0,
          "minHeight": 20,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#323130",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 20,
            "left": 0,
            "marginBottom": 6,
            "marginLeft": 6,
            "marginRight": 6,
            "marginTop": 4,
            "top": 0,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#323130",
              "borderRadius": 5,
              "height": 10,
              "left": 4,
              "opacity": 0,
              "position": "relative",
              "top": 4,
              "width": 10,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "borderColor": "transparent",
            "borderStyle": "dashed",
            "borderWidth": 1,
            "color": "#323130",
            "fontSize": 12,
            "marginTop": 3,
          }
        }
      >
        Option B
      </Text>
    </View>
    <View
      acceptsKeyboardFocus={true}
      accessibilityActions={
        Array [
          Object {
            "label": "Select a RadioButton",
            "name": "Select",
          },
        ]
      }
      accessibilityLabel="Option C"
      accessibilityRole="radio"
      accessibilityStates={
        Array [
          "disabled",
        ]
      }
      accessible={true}
      onAccessibilityAction={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      rest={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 0,
          "minHeight": 20,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#f3f2f1",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 20,
            "left": 0,
            "marginBottom": 6,
            "marginLeft": 6,
            "marginRight": 6,
            "marginTop": 4,
            "top": 0,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#ffffff",
              "borderRadius": 5,
              "height": 10,
              "left": 4,
              "opacity": 0,
              "position": "relative",
              "top": 4,
              "width": 10,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "borderColor": "transparent",
            "borderStyle": "dashed",
            "borderWidth": 1,
            "color": "#a19f9d",
            "fontSize": 12,
            "marginTop": 3,
          }
        }
      >
        Option C
      </Text>
    </View>
    <View
      acceptsKeyboardFocus={true}
      accessibilityActions={
        Array [
          Object {
            "label": "Select a RadioButton",
            "name": "Select",
          },
        ]
      }
      accessibilityLabel="Option D"
      accessibilityRole="radio"
      accessibilityStates={Array []}
      accessible={true}
      onAccessibilityAction={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      rest={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 0,
          "minHeight": 20,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#323130",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 20,
            "left": 0,
            "marginBottom": 6,
            "marginLeft": 6,
            "marginRight": 6,
            "marginTop": 4,
            "top": 0,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#323130",
              "borderRadius": 5,
              "height": 10,
              "left": 4,
              "opacity": 0,
              "position": "relative",
              "top": 4,
              "width": 10,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "borderColor": "transparent",
            "borderStyle": "dashed",
            "borderWidth": 1,
            "color": "#323130",
            "fontSize": 12,
            "marginTop": 3,
          }
        }
      >
        Option D
      </Text>
    </View>
  </View>
</View>
`;

exports[`RadioGroup + RadioButton Tests Tokenized RadioGroup default 1`] = `
<View
  accessibilityLabel="Test RadioGroup"
  accessibilityRole="radiogroup"
  accessible={true}
  rest={Object {}}
  style={
    Object {
      "alignItems": "flex-start",
      "display": "flex",
      "flexDirection": "column",
    }
  }
>
  <Text
    style={
      Object {
        "color": "blue",
        "fontFamily": "inherit",
        "fontSize": 18,
        "fontWeight": "600",
      }
    }
  >
    Test RadioGroup
  </Text>
  <View />
</View>
`;
