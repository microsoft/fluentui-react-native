// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox component tests Checkbox all props 1`] = `
<View
  accessibilityActions={
    Array [
      Object {
        "name": "Toggle",
      },
    ]
  }
  accessibilityLabel="All Props Checkbox"
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "checked": true,
      "disabled": true,
      "required": true,
    }
  }
  accessible={true}
  defaultChecked={true}
  enableFocusRing={true}
  focusable={false}
  keyUpEvents={
    Array [
      Object {
        "key": " ",
      },
    ]
  }
  labelPosition="before"
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  shape="circular"
  size="large"
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": undefined,
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "padding": 8,
      "paddingHorizontal": undefined,
    }
  }
>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    onAccessibilityTap={[Function]}
    style={
      Object {
        "color": "#bdbdbd",
        "fontFamily": "Segoe UI",
        "fontSize": 14,
        "fontWeight": "400",
        "margin": 0,
        "marginEnd": 10,
      }
    }
  >
    All Props Checkbox
  </Text>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    onAccessibilityTap={[Function]}
    style={
      Object {
        "color": "#690a19",
        "fontFamily": "Segoe UI",
        "fontSize": 14,
        "fontWeight": "400",
        "margin": 0,
        "paddingStart": 8,
      }
    }
  >
    *
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#f0f0f0",
        "borderColor": "#e0e0e0",
        "borderRadius": 9999,
        "borderWidth": 1,
        "height": 20,
        "justifyContent": "center",
        "width": 20,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={16}
      bbWidth={16}
      color={4290624957}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": "#bdbdbd",
            "height": 16,
            "opacity": 1,
            "width": 16,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      tintColor={4290624957}
      vbHeight={12}
      vbWidth={12}
    >
      <RNSVGGroup
        opacity={1}
      >
        <RNSVGPath
          d="M9.76497 3.20474C10.0661 3.48915 10.0797 3.96383 9.79526 4.26497L5.54526 8.76497C5.40613 8.91228 5.21332 8.99703 5.01071 8.99993C4.8081 9.00282 4.61295 8.92361 4.46967 8.78033L2.21967 6.53033C1.92678 6.23744 1.92678 5.76257 2.21967 5.46967C2.51256 5.17678 2.98744 5.17678 3.28033 5.46967L4.98463 7.17397L8.70474 3.23503C8.98915 2.9339 9.46383 2.92033 9.76497 3.20474Z"
          fill={
            Array [
              2,
            ]
          }
          propList={
            Array [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Checkbox component tests Checkbox all tokens 1`] = `
<View
  accessibilityActions={
    Array [
      Object {
        "name": "Toggle",
      },
    ]
  }
  accessibilityLabel="All Tokens Checkbox"
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
      "required": false,
    }
  }
  accessible={true}
  defaultChecked={false}
  enableFocusRing={true}
  focusable={true}
  keyUpEvents={
    Array [
      Object {
        "key": " ",
      },
    ]
  }
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "purple",
      "borderColor": "green",
      "borderRadius": 4,
      "borderWidth": 2,
      "display": "flex",
      "flexDirection": "row",
      "padding": 8,
      "paddingHorizontal": 12,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "blue",
        "borderColor": "red",
        "borderRadius": 2,
        "borderWidth": 1,
        "height": 16,
        "justifyContent": "center",
        "width": 16,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={12}
      bbWidth={12}
      color={4294951115}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": "pink",
            "height": 12,
            "opacity": 0.7,
            "width": 12,
          },
          Object {
            "flex": 0,
            "height": 12,
            "width": 12,
          },
        ]
      }
      tintColor={4294951115}
      vbHeight={12}
      vbWidth={12}
    >
      <RNSVGGroup
        opacity={0.7}
      >
        <RNSVGPath
          d="M9.76497 3.20474C10.0661 3.48915 10.0797 3.96383 9.79526 4.26497L5.54526 8.76497C5.40613 8.91228 5.21332 8.99703 5.01071 8.99993C4.8081 9.00282 4.61295 8.92361 4.46967 8.78033L2.21967 6.53033C1.92678 6.23744 1.92678 5.76257 2.21967 5.46967C2.51256 5.17678 2.98744 5.17678 3.28033 5.46967L4.98463 7.17397L8.70474 3.23503C8.98915 2.9339 9.46383 2.92033 9.76497 3.20474Z"
          fill={
            Array [
              2,
            ]
          }
          propList={
            Array [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    onAccessibilityTap={[Function]}
    style={
      Object {
        "color": "yellow",
        "fontFamily": "Segoe UI",
        "fontSize": 12,
        "fontWeight": "400",
        "margin": 0,
        "marginEnd": 7,
        "marginStart": 8,
      }
    }
  >
    All Tokens Checkbox
  </Text>
</View>
`;

exports[`Checkbox component tests Checkbox composed 1`] = `
<View
  accessibilityActions={
    Array [
      Object {
        "name": "Toggle",
      },
    ]
  }
  accessibilityLabel="Composed Button with RNText"
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "checked": undefined,
      "disabled": false,
      "required": false,
    }
  }
  accessible={true}
  enableFocusRing={true}
  focusable={true}
  keyUpEvents={
    Array [
      Object {
        "key": " ",
      },
    ]
  }
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onFocus={[Function]}
  onHoverIn={[Function]}
  onHoverOut={[Function]}
  onKeyUp={[Function]}
  onPress={[Function]}
  onPressIn={[Function]}
  onPressOut={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": undefined,
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "padding": 8,
      "paddingHorizontal": 12,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#616161",
        "borderRadius": 2,
        "borderWidth": 1,
        "height": 16,
        "justifyContent": "center",
        "width": 16,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={12}
      bbWidth={12}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": undefined,
            "height": 12,
            "opacity": 0,
            "width": 12,
          },
          Object {
            "flex": 0,
            "height": 12,
            "width": 12,
          },
        ]
      }
      vbHeight={12}
      vbWidth={12}
    >
      <RNSVGGroup
        opacity={0}
      >
        <RNSVGPath
          d="M9.76497 3.20474C10.0661 3.48915 10.0797 3.96383 9.79526 4.26497L5.54526 8.76497C5.40613 8.91228 5.21332 8.99703 5.01071 8.99993C4.8081 9.00282 4.61295 8.92361 4.46967 8.78033L2.21967 6.53033C1.92678 6.23744 1.92678 5.76257 2.21967 5.46967C2.51256 5.17678 2.98744 5.17678 3.28033 5.46967L4.98463 7.17397L8.70474 3.23503C8.98915 2.9339 9.46383 2.92033 9.76497 3.20474Z"
          fill={
            Array [
              2,
            ]
          }
          propList={
            Array [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <Text
    style={
      Object {
        "color": "#242424",
        "fontFamily": "Segoe UI",
        "fontSize": 12,
        "fontWeight": "400",
        "letterSpacing": undefined,
        "lineHeight": undefined,
        "marginStart": 8,
      }
    }
  >
    Composed Button with RNText
  </Text>
</View>
`;

exports[`Checkbox component tests Checkbox default 1`] = `
<View
  accessibilityActions={
    Array [
      Object {
        "name": "Toggle",
      },
    ]
  }
  accessibilityLabel="Default Checkbox"
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
      "required": false,
    }
  }
  accessible={true}
  defaultChecked={false}
  enableFocusRing={true}
  focusable={true}
  keyUpEvents={
    Array [
      Object {
        "key": " ",
      },
    ]
  }
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": undefined,
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "row",
      "padding": 8,
      "paddingHorizontal": 12,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#616161",
        "borderRadius": 2,
        "borderWidth": 1,
        "height": 16,
        "justifyContent": "center",
        "width": 16,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={12}
      bbWidth={12}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": undefined,
            "height": 12,
            "opacity": 0,
            "width": 12,
          },
          Object {
            "flex": 0,
            "height": 12,
            "width": 12,
          },
        ]
      }
      vbHeight={12}
      vbWidth={12}
    >
      <RNSVGGroup
        opacity={0}
      >
        <RNSVGPath
          d="M9.76497 3.20474C10.0661 3.48915 10.0797 3.96383 9.79526 4.26497L5.54526 8.76497C5.40613 8.91228 5.21332 8.99703 5.01071 8.99993C4.8081 9.00282 4.61295 8.92361 4.46967 8.78033L2.21967 6.53033C1.92678 6.23744 1.92678 5.76257 2.21967 5.46967C2.51256 5.17678 2.98744 5.17678 3.28033 5.46967L4.98463 7.17397L8.70474 3.23503C8.98915 2.9339 9.46383 2.92033 9.76497 3.20474Z"
          fill={
            Array [
              2,
            ]
          }
          propList={
            Array [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    onAccessibilityTap={[Function]}
    style={
      Object {
        "color": "#242424",
        "fontFamily": "Segoe UI",
        "fontSize": 12,
        "fontWeight": "400",
        "margin": 0,
        "marginStart": 8,
      }
    }
  >
    Default Checkbox
  </Text>
</View>
`;

exports[`Checkbox component tests Checkbox no label 1`] = `
<View
  accessibilityActions={
    Array [
      Object {
        "name": "Toggle",
      },
    ]
  }
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
      "required": false,
    }
  }
  accessible={true}
  defaultChecked={false}
  enableFocusRing={true}
  focusable={true}
  keyUpEvents={
    Array [
      Object {
        "key": " ",
      },
    ]
  }
  onAccessibilityAction={[Function]}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": undefined,
      "borderRadius": 2,
      "display": "flex",
      "flexDirection": "row",
      "padding": 4,
      "paddingHorizontal": undefined,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#616161",
        "borderRadius": 2,
        "borderWidth": 1,
        "height": 16,
        "justifyContent": "center",
        "width": 16,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={12}
      bbWidth={12}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": undefined,
            "height": 12,
            "opacity": 0,
            "width": 12,
          },
          Object {
            "flex": 0,
            "height": 12,
            "width": 12,
          },
        ]
      }
      vbHeight={12}
      vbWidth={12}
    >
      <RNSVGGroup
        opacity={0}
      >
        <RNSVGPath
          d="M9.76497 3.20474C10.0661 3.48915 10.0797 3.96383 9.79526 4.26497L5.54526 8.76497C5.40613 8.91228 5.21332 8.99703 5.01071 8.99993C4.8081 9.00282 4.61295 8.92361 4.46967 8.78033L2.21967 6.53033C1.92678 6.23744 1.92678 5.76257 2.21967 5.46967C2.51256 5.17678 2.98744 5.17678 3.28033 5.46967L4.98463 7.17397L8.70474 3.23503C8.98915 2.9339 9.46383 2.92033 9.76497 3.20474Z"
          fill={
            Array [
              2,
            ]
          }
          propList={
            Array [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <Text
    ellipsizeMode="tail"
    numberOfLines={0}
    onAccessibilityTap={[Function]}
    style={
      Object {
        "color": "#242424",
        "fontFamily": "Segoe UI",
        "fontSize": 12,
        "fontWeight": "400",
        "margin": 0,
      }
    }
  />
</View>
`;
