// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FocusZone No Props No children 1`] = `<RCTFocusZone />`;

exports[`FocusZone No Props One child 1`] = `
<RCTFocusZone>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone No Props Three children 1`] = `
<RCTFocusZone>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone No Props Two children 1`] = `
<RCTFocusZone>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props All Props 1`] = `
<RCTFocusZone
  disabled={false}
  focusZoneDirection="vertical"
  navigateAtEnd="NavigateStopAtEnds"
  use2DNavigation={true}
>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props defaultTabbableElement Prop 1`] = `
<RCTFocusZone>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props disabled Prop 1`] = `
<RCTFocusZone
  disabled={true}
>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props focusZoneDirection Prop 1`] = `
<RCTFocusZone
  focusZoneDirection="bidirectional"
>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props navigateAtEnd Prop 1`] = `
<RCTFocusZone
  navigateAtEnd="NavigateWrap"
>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;

exports[`FocusZone With Props use2DNavigation Prop 1`] = `
<RCTFocusZone
  use2DNavigation={true}
>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
  <View
    acceptsKeyboardFocus={true}
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-start",
        "backgroundColor": "#f3f2f1",
        "borderColor": "#8a8886",
        "borderRadius": 2,
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 32,
          "minWidth": 80,
          "paddingEnd": 16,
          "paddingStart": 16,
        }
      }
    />
  </View>
</RCTFocusZone>
`;
