pr:
  - master

variables:
  CI: true

jobs:
  # Dedicated task to build and bundle JS code, including jest tests, snapshot testing, and linting, because these things can be super
  # time consuming they don't need to run on every CI pass, instead do a dedicated JS loop to make the platform specific tests start quicker
  - job: BuildAndBundle
    displayName: Build, test, and bundle JavaScript
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - checkout: self
        persistCredentials: true

      - template: templates/setup-repo.yml

      - script: |
          yarn buildci
        displayName: 'yarn buildci'

      - script: |
          yarn checkchange
        displayName: 'check change'

      - script: |
          yarn check-for-changed-files
        displayName: 'verify API and Ensure Changed Files'

  # Windows bundling and end to end testing
  - job: WindowsPR
    displayName: Windows PR
    pool:
      vmImage: 'windows-2019'
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    # The "displayName" of all steps that execute a command within our repo (such as 'yarn build') start lowercase to make it
    # easier to differentiate in-repo scripts from environmental setup. This makes it easier to understand CI pipeline results.
    steps:
      - checkout: self
        persistCredentials: true

      # yarn and minimal build to get set up
      - template: templates/setup-repo-min-build.yml

      # bundle windows adn do end to end tests
      - template: templates/e2e-testing-uwp.yml

  # Win32 bundling and end to end testing
  - job: Win32PR
    displayName: Win32 PR
    pool:
      vmImage: 'windows-2019'
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5

    steps:
      - checkout: self
        persistCredentials: true

      # yarn and minimal build to get set up
      - template: templates/setup-repo-min-build.yml

      # bundle win32 and do end to end tests
      - template: templates/e2e-testing-win32.yml

  - job: ApplePR
    displayName: Apple PR
    pool:
      vmImage: 'macos-10.15'
      demands: ['xcode', 'sh', 'npm']
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    strategy:
      maxParallel: 4
      matrix:
        ios:
          relative_directory: 'ios'
        macos:
          relative_directory: 'macos'

    steps:
      - checkout: self
        persistCredentials: true

      # Clean Derived Data
      - script: |
          rm -rf $(Build.Repository.LocalPath)/DerivedData
        displayName: 'Clean DerivedData'

      - script: |
          sudo gem install cocoapods
        displayName: 'Install Cocoapods Environment'

      - template: templates/setup-repo-min-build.yml

      - script: |
          yarn bundle
        workingDirectory: apps/$(relative_directory)
        displayName: 'yarn bundle $(relative_directory)'

      # Select proper Xcode version
      - template: templates/apple-xcode-select.yml

      - template: templates/apple-yarn-build.yml
        parameters:
          relative_directory: $(relative_directory)

  - job: AndroidPR
    displayName: Android PR
    pool:
      vmImage: 'macos-10.15'
    variables:
      relative_directory: 'android'
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - checkout: self
        persistCredentials: true

      # setup repo basics
      - template: templates/setup-repo-min-build.yml

      # package android bundle
      - script: |
          yarn bundle
        workingDirectory: apps/$(relative_directory)
        displayName: 'yarn bundle $(relative_directory)'

      # sets-up specifics for android dependency like NDK & emulator
      - template: templates/android-dep-setup.yml

      # build android apk and run available Instrumented test
      - task: Gradle@2
        inputs:
          gradleWrapperFile: 'apps/$(relative_directory)/src/gradlew'
          workingDirectory: 'apps/$(relative_directory)/src'
          tasks: 'assembleDebug cAT'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          sonarQubeRunAnalysis: false
  # Uncomment this job to test changes to changes to the NuGet package
  # We keep it commented out by default because this job is much longer than the other PR jobs
  # - job: NuGetPublish
  #   displayName: NuGet Publish
  #   pool:
  #     vmImage: 'macos-10.15'
  #     demands: ['xcode', 'sh', 'npm']
  #   timeoutInMinutes: 90 # how long to run the job before automatically cancelling
  #   cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
  #   steps:
  #     - checkout: self
  #       persistCredentials: true
  #     - template: templates/setup-repo-min-build.yml
  #     # Clean Derived Data
  #     - script: |
  #         rm -rf $(Build.Repository.LocalPath)/DerivedData
  #       displayName: 'Clean DerivedData'
  #     - script: |
  #         sudo gem install cocoapods
  #       displayName: 'Install CocoaPods Environment'
  #     - script: |
  #         yarn bundle ios
  #       workingDirectory: $(Build.Repository.LocalPath)/apps/ios
  #       displayName: 'yarn bundle iOS'
  #     - script: |
  #         yarn bundle macos
  #       workingDirectory: $(Build.Repository.LocalPath)/apps/macos
  #       displayName: 'yarn bundle macOS'
  #     # Select proper Xcode version
  #     - template: templates/apple-xcode-select.yml
  #     - template: templates/apple-xcode-build-static-libs.yml
  #     - template: templates/nuget-publish.yml
