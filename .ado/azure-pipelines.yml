pr:
  - master

variables:
  CI: true

jobs:
  - job: WindowsPR
    displayName: Windows PR
    pool:
      vmImage: "windows-2019"
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    # The "displayName" of all steps that execute a command within our repo (such as 'yarn build') start lowercase to make it
    # easier to differentiate in-repo scripts from environmental setup. This makes it easier to understand CI pipeline results.
    steps:
      - checkout: self
        persistCredentials: true

      - template: templates/setup-repo.yml

      - script: |
          yarn checkchange
        displayName: "check change"

      - script: |
          yarn check-for-changed-files
        displayName: "verify API and Ensure Changed Files"

      - template: templates/e2e-testing-uwp.yml

      - script: |
          yarn e2etest
        workingDirectory: apps/win32
        displayName: "run E2E Win32 tests"

  - job: ApplePR
    displayName: Apple PR
    pool:
      vmImage: "macos-10.15"
      demands: ["xcode", "sh", "npm"]
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    strategy:
      maxParallel: 4
      matrix:
        ios:
          relative_directory: "ios"
          xcode_sdx: "ios"
          xcode_configuration: "Debug"
          xcode_workspacePath: "apps/ios/src/FluentUITester.xcworkspace"
          xcode_scheme: "FluentUITester"
          xcode_actions: "build"
          xcode_useXcpretty: true
          xcode_destination: "platform=iOS Simulator,OS=latest,name=iPhone 11"
        macos:
          relative_directory: "macos"
          xcode_sdx: "macosx"
          xcode_configuration: "Debug"
          xcode_workspacePath: "apps/macos/src/FluentUITester.xcworkspace"
          xcode_scheme: "FluentUITester-macOS"
          xcode_actions: "build"
          xcode_useXcpretty: true
          xcode_destination: "platform=macOS,arch=x86_64"

    steps:
      - checkout: self
        persistCredentials: true

      # Clean Derived Data
      - script: |
          rm -rf $(Build.Repository.LocalPath)/DerivedData
        displayName: "Clean DerivedData"

      - script: |
          sudo gem install cocoapods
        displayName: "Install Cocoapods Environment"

      - template: templates/setup-repo.yml

      # Select proper XCode version
      - template: templates/apple-xcode-select.yml

      - template: templates/apple-xcode-build.yml
        parameters:
          relative_directory: $(relative_directory)
          xcode_sdx: $(xcode_sdx)
          xcode_configuration: $(xcode_configuration)
          xcode_workspacePath: $(xcode_workspacePath)
          xcode_scheme: $(xcode_scheme)
          xcode_actions: $(xcode_actions)
          xcode_useXcpretty: $(xcode_useXcpretty)
          xcode_destination: $(xcode_destination)
