# Build pipeline for publishing

trigger:
  batch: true
  branches:
    include:
      - master

pr: none

variables:
  - group: 'NPM and Github Secrets'

jobs:
  - job: NPMPublish
    displayName: NPM Publish
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
        displayName: 'Install Node.js'

      - script: |
          git config user.name "UI-Fabric-RN-Bot"
          git config user.email "uifrnbot@microsoft.com"
          git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/ui-fabric-react-native.git
        displayName: Git Authentication
      - template: templates/yarn-install.yml

      - script: |
          yarn test
        displayName: 'yarn test'

      - script: |
          yarn publish:beachball -- -b origin/master -n $(npmAuth) --access public -y
        displayName: 'Publish NPM Packages'

  - job: NuGetPublish
    displayName: NuGet Publish
    pool:
      vmImage: 'macos-10.15'
      demands: ['xcode', 'sh', 'npm']
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - checkout: self
        persistCredentials: true

      # Clean Derived Data
      - script: |
          rm -rf $(Build.Repository.LocalPath)/DerivedData
        displayName: 'Clean DerivedData'

      - script: |
          sudo gem install cocoapods
        displayName: 'Install CocoaPods Environment'

      - template: templates/setup-repo-min-build.yml

      - script: |
          yarn bundle macOS
        workingDirectory: apps/macos
        displayName: 'yarn bundle macOS'

      - script: |
          yarn bundle iOS
        workingDirectory: apps/ios
        displayName: 'yarn bundle iOS'

      # Select proper XCode version
      - template: templates/apple-xcode-select.yml

      - template: templates/apple-xcode-build-static-libs.yml

      # generate the sanitizedBuildNumber environment variable
      - bash: 'scripts/generate_build_number.sh'
        displayName: 'Generate Build Number'

      # pack the nuspec
      - task: NuGetCommand@2
        displayName: 'NuGet pack'
        inputs:
          command: pack
          packagesToPack: 'package.nuspec'
          buildProperties: buildNumber=$(sanitizedBuildNumber);commitId=$(Build.SourceVersion);repoUri=$(Build.Repository.Uri)

      # push the package package
      - task: NuGetCommand@2
        displayName: 'NuGet push'
        inputs:
          command: push
          packagesToPush: '$(Build.ArtifactStagingDirectory)/Microsoft.FluentUI.ReactNative.*.nupkg'
          nuGetFeedType: external
          publishFeedCredentials: Office
