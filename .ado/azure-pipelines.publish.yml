# Build pipeline for publishing

trigger:
  batch: true
  branches:
    include:
      - main
      - releases/*

pr: none

parameters:
  - name: skipNpmPublish
    displayName: Skip Npm Publish
    type: boolean
    default: false
  - name: skipGitPush
    displayName: Skip Git Push
    type: boolean
    default: false
  - name: skipNugetPublish
    displayName: Skip Nuget Publish
    type: boolean
    default: false

variables:
  - group: 'FluentUI React Native Secrets'
  - group: InfoSec-SecurityResults
  - name: tags
    value: production,externalfacing

jobs:
  - job: NPMPublish
    displayName: NPM Publish
    pool: Azure-Pipelines-EO-Ubuntu20.04-Office
    steps:
      - template: templates/setup-repo.yml

      - script: |
          git config user.name "UI-Fabric-RN-Bot"
          git config user.email "uifrnbot@microsoft.com"
          git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/ui-fabric-react-native.git
        displayName: Git Authentication

      - script: |
          yarn
        displayName: 'yarn install'

      - script: |
          yarn buildci
        displayName: 'yarn buildci'

      - script: |
          echo ##vso[task.setvariable variable=SkipNpmPublishArgs]--no-publish
        displayName: Enable No-Publish (npm)
        condition: ${{ parameters.skipNpmPublish }}

      - script: |
          echo ##vso[task.setvariable variable=SkipGitPushPublishArgs]--no-push
        displayName: Enable No-Publish (git)
        condition: ${{ parameters.skipGitPush }}

      - script: |
          yarn publish:beachball -- $(SkipNpmPublishArgs) $(SkipGitPushPublishArgs) -b origin/main -n $(npmAuth) --access public -y
        displayName: 'Publish NPM Packages (for main branch)'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

      - script: |
          yarn publish:beachball -- $(SkipNpmPublishArgs) $(SkipGitPushPublishArgs) -b origin/main -n $(npmAuth) --access public -y -t v%BUILD_SOURCEBRANCH:refs/heads/releases/=% -b origin/%BUILD_SOURCEBRANCH:refs/heads/=% --prerelease-prefix %BUILD_SOURCEBRANCH:refs/heads/releases/=%
        displayName: 'Publish NPM Packages (for other release branches)'
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest Npm
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: ðŸ“’ Publish Manifest Npm
        inputs:
          artifactName: SBom-Npm-$(System.JobAttempt)
          targetPath: $(System.DefaultWorkingDirectory)/_manifest

      - task: ComponentGovernanceComponentDetection@0
        inputs:
          ignoreDirectories: 'node_modules/react-native/template'

  - job: NuGetPublish
    displayName: NuGet Publish
    pool:
      vmImage: 'internal-macos12'
      demands: ['xcode', 'sh', 'npm']
    variables:
      - name: BUILDSECMON_OPT_IN
        value: true
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - template: templates/apple-nuget-publish.yml
        parameters:
          skipNugetPublish: ${{ parameters.skipNugetPublish }}

  - job: Win32NuGetPublish
    displayName: Win32 FluentTester NuGet Publish
    pool: OE-OfficePublic
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - template: templates/win32-nuget-publish.yml
        parameters:
          skipNugetPublish: ${{ parameters.skipNugetPublish }}

  - job: Win32TestingDependenciesNuGetPublish
    displayName: Win32 Automated Testing Dependencies NuGet Publish
    pool: OE-OfficePublic
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - template: templates/e2e-dependency-nuget-publish.yml
        parameters:
          skipNugetPublish: ${{ parameters.skipNugetPublish }}
