parameters:
  platform:
  applicationType:

steps:
  # Generate reports. conitnueOnError is true because this task will always fail (until I figure out way to stop command before timeout)
  # - script: |
  #     yarn generate-report
  #   workingDirectory: apps\${{parameters.platform}}
  #   displayName: generate ${{parameters.platform}} report
  #   condition: succeededOrFailed()
  #   continueOnError: true
  #   timeoutInMinutes: 1

  - script: |
      start cmd.exe @cmd /k "allure generate allure-results --clean"
    workingDirectory: apps\${{parameters.platform}}\allure-results
    condition: succeededOrFailed()
    displayName: generate ${{parameters.platform}} report

  # Copy errorShots to FluentTesterDump
  - task: CopyFiles@2
    displayName: Copy tree dump screenshots
    inputs:
      sourceFolder: $(Build.SourcesDirectory)\apps\${{parameters.platform}}\errorShots
      targetFolder: $(Build.StagingDirectory)/E2E_${{parameters.applicationType}}_Dump
    condition: succeededOrFailed()

  # Copy appium log to FluentTesterDump
  - task: CopyFiles@2
    displayName: Copy tree dump report logs
    inputs:
      sourceFolder: $(Build.SourcesDirectory)\apps\${{parameters.platform}}\reports\
      contents: "*"
      targetFolder: $(Build.StagingDirectory)/E2E_${{parameters.applicationType}}_Dump
    condition: succeededOrFailed()

  - powershell: |
      Move-Item -Path $(Build.SourcesDirectory)\apps\${{parameters.platform}}\allure-report -Destination $(Build.StagingDirectory)/E2E_${{parameters.applicationType}}_Dump
    displayName: Copy allure report
    condition: succeededOrFailed()

  # Publish FluentTesterDump
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact:E2E_${{parameters.applicationType}}_Dump"
    inputs:
      artifactName: E2E_${{parameters.applicationType}}_Dump
      pathtoPublish: $(Build.StagingDirectory)/E2E_${{parameters.applicationType}}_Dump
    condition: succeededOrFailed()
