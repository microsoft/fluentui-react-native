steps:
  - task: DownloadSecureFile@1
    name: UwpCertificate
    inputs:
      secureFile: FluentTester_TemporaryKey.pfx
    displayName: "Download UWP App Certificate"

  - powershell: |
      certutil –f –p password –importpfx $(UwpCertificate.secureFilePath)
    displayName: "Add Certificate to Personal Store"

  - task: DownloadSecureFile@1
    name: AzureCredentials
    inputs:
      secureFile: "installcredprovider.ps1"
    displayName: "Download Azure Credentials Plugin for NuGet"

  - task: PowerShell@2
    inputs:
      filePath: $(AzureCredentials.secureFilePath)
      arguments: "-AddNetfx -Force"
    displayName: "Install Azure Credentials Plugin for NuGet"

  # - script: |
  #     mkdir errorShots
  #   workingDirectory: apps/windows
  #   displayName: 'mkdir errorShots'

  # - script: |
  #     mkdir errorShots
  #   workingDirectory: apps/win32
  #   displayName: 'mkdir errorShots'

  - script: |
      yarn windows
    workingDirectory: apps\windows
    displayName: "run UWP app"

  # Wait for app to launch. A workaround to avoid WinAppDriver error: Failed to locate opened application window with appId
  - powershell: |
      Start-Sleep -Seconds 90
    displayName: "Wait for app to launch"

  # Kill FluentTester, leave server up and running. This was the only way I could get the server continuously running
  # as a separate process.
  - powershell: |
      Stop-Process -Name FluentTester
    displayName: "Kill FluentTester Process"

  - script: |
      yarn e2etest
    workingDirectory: apps\windows
    displayName: "run UWP E2E tests"

  - template: e2e-publish-artifacts.yml
    parameters:
      applicationType: UWP
      platform: windows

  - script: |
      yarn e2etest
    workingDirectory: apps\win32
    displayName: run Win32 E2E tests

  # - script: |
  #     yarn generate-report
  #   workingDirectory: apps\win32
  #   displayName: 'generate Win32 report'

  - template: e2e-publish-artifacts.yml
    parameters:
      applicationType: win32
      platform: win32
