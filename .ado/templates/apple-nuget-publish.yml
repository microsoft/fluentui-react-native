parameters:
  - name: skipNugetPublish
    displayName: Skip Nuget Publish
    type: boolean
    default: false

steps:
  - checkout: self
    persistCredentials: true

  - template: setup-repo-min-build.yml

  # Clean Derived Data
  - script: |
      rm -rf $(Build.Repository.LocalPath)/DerivedData
    displayName: 'Clean DerivedData'

  - script: |
      sudo gem install cocoapods
    displayName: 'Install CocoaPods Environment'

  # Select proper Xcode version
  - template: apple-xcode-select.yml

  # Pod Install iOS
  - bash: |
      echo "pod install --project-directory=src"
      pod install --project-directory=src
    workingDirectory: apps/ios
    displayName: 'pod install iOS'

  # Pod Install macOS
  - bash: |
      echo "pod install --project-directory=src"
      pod install --project-directory=src
    workingDirectory: apps/macOS
    displayName: 'pod install macOS'

  # macOS Release
  - template: apple-xcode-build.yml
    parameters:
      xcode_sdk: 'macosx'
      xcode_workspacePath: 'apps/macos/src/FluentTester.xcworkspace'
      xcode_actions: 'build'
      xcode_scheme: 'FluentTester'
      xcode_configuration: 'Release'
      xcode_extraArgs: '-xcconfig $(Build.Repository.LocalPath)/.ado/xcconfig/publish_overrides.xcconfig'

  # iPhone Simulator Release
  - template: apple-xcode-build.yml
    parameters:
      xcode_sdk: 'iphonesimulator'
      xcode_workspacePath: 'apps/ios/src/FluentTester.xcworkspace'
      xcode_actions: 'build'
      xcode_scheme: 'FluentTester'
      xcode_configuration: 'Release'
      xcode_extraArgs: '-xcconfig $(Build.Repository.LocalPath)/.ado/xcconfig/publish_overrides_ios_simulator.xcconfig'

  # iPhone Device Release
  - template: apple-xcode-build.yml
    parameters:
      xcode_sdk: 'iphoneos'
      xcode_workspacePath: 'apps/ios/src/FluentTester.xcworkspace'
      xcode_actions: 'build'
      xcode_scheme: 'FluentTester'
      xcode_configuration: 'Release'
      xcode_extraArgs: '-xcconfig $(Build.Repository.LocalPath)/.ado/xcconfig/publish_overrides_ios_device.xcconfig'

  # generate the sanitizedBuildNumber environment variable
  - bash: '.ado/scripts/generate_build_number.sh'
    displayName: 'Generate Build Number'

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: ðŸ“’ Generate Manifest Apple
    inputs:
      BuildDropPath: $(System.DefaultWorkingDirectory)

  - task: PublishPipelineArtifact@1
    displayName: ðŸ“’ Publish Manifest Apple
    inputs:
      artifactName: SBom-Apple-$(System.JobAttempt)
      targetPath: $(System.DefaultWorkingDirectory)/_manifest

  # pack the nuspec
  - task: NuGetCommand@2
    displayName: 'NuGet pack'
    inputs:
      command: pack
      packagesToPack: 'package.nuspec'
      buildProperties: buildNumber=$(sanitizedBuildNumber);commitId=$(Build.SourceVersion);repoUri=$(Build.Repository.Uri)

  - task: ComponentGovernanceComponentDetection@0

  # push the package package
  - task: NuGetCommand@2
    displayName: 'NuGet push'
    condition: not(${{ parameters.skipNugetPublish }})
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/Microsoft.FluentUI.ReactNative.*.nupkg'
      publishVstsFeed: Office
